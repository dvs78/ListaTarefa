
















17 PASSO - ALTERAR O CAMINHO DE ACESSO 
Copiar o link de deploy do RENDER
https://viveirolimeira.onrender.com


 Como preencher no DBeaver
Aqui está exatamente o que colocar:
De acordo com a senha do banco de dados no render em connect:
postgresql://viveirolimeira_94ij_user:nZIDkx3o5NVVVs3fWEDpiSAjsBJYpmBz@dpg-d17k8evdiees7387e82g-a/viveirolimeira_94ij

Campo no DBeaver	Valor
Ir em banco de dados => nova conexão e 2 cliques em postgres

Principal:
Host	dpg-d17k8evdiees7387e82g-a.oregon-postgres.render.com
Porta	5432
Base de dados	viveirolimeira_94ij
Usuário	viveirolimeira_94ij_user
Senha	nZIDkx3o5NVVVs3fWEDpiSAjsBJYpmBz

Ir em propriedades do driver:
Modo SSL (se aparecer)	require

Clicar em testar  conexão


17 PASSO - CRIAR O ARQUIVO .env PARA DEIXAR OS DADOS DE CONEXÃO SEGUROS
Criar as variáveis de ambiente
São as variáveis que não serão compartilhadas com terceiros

Criar arquivo .env
Colocar no arquivo .env
DB_HOST=localhost
DB_PORT=5432
DB_USER=postgres
DB_PASSWORD=Limao_10
DB_DATABASE=ViveiroLimeira

Digitar no terminal npm install dotenv
npm install dotenv
Serve para ter acesso as variáveis de ambiente

Colocar na server.js = import "dotenv/config"
Versões mais novas não precisam do dotenv, não deu certo. Precisei instalar

Alterar o arquivo server.js
const pool = new pg.Pool({
  host: process.env.DB_HOST,
  port: process.env.DB_PORT,
  user: process.env.DB_USER,
  password: process.env.DB_PASSWORD,
  database: process.env.DB_DATABASE,
});




No arquivo connect do backend, cole o código abaixo:
import pkg from 'pg';
const { Pool } = pkg;
import dotenv from 'dotenv';

dotenv.config();

const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false,
  },
});

export default pool;


